library(rpart)
library(rpart.plot)
library(caret)
load("data/College4.RData")
head(College4)
unis$Tipo<-factor(College4$Private=="Yes",labels=c('Pública','Privada'))
head(unis)
table(unis$Tipo)
set.seed(40)
nobs<-nrow(unis)
itrain<-sample(nobs,0.8*nobs)
train<-unis[itrain,]
test<-unis[-itrain,]
unis<-College4[,colnames(College4)!="Private"]
unis$Tipo<-factor(College4$Private=="Yes",labels=c('Pública','Privada'))
head(unis)
table(unis$Tipo)
set.seed(40)
nobs<-nrow(unis)
itrain<-sample(nobs,0.8*nobs)
train<-unis[itrain,]
test<-unis[-itrain,]
library(kernlab)
set.seed(40)
svm<-ksvm(Tipo~.,data=train)
svm #Param C = 1; Sigma = 0.05438
pred<-predict(svm,newdata=test)
caret::confusionMatrix(pred,test$Tipo)
tune.grid<-expand.grid(sigma=c(0.01,0.05,0.1),C=c(0.5,1,10),error=NA)
best.err <- Inf
set.seed(40)
for (i in 1:nrow(tune.grid)){
fit<-ksvm(Tipo~.,data=train[,],cross=10,C=tune.grid$C[i],kpar=list(tune.grid$sigma[i]))
fit.error<-fit@cross
tune.grid$error[i] <- fit.error
if (fit.error < best.err) {
final.model <- fit
best.err <- fit.error
best.tune <- tune.grid[i, ]
}
}
final.model # Param. C = 0.5; sigma = 0.01
pred2<-predict(final.model,newdata=test)
caret::confusionMatrix(pred2,test$Tipo)
head(predict(svm,newdata = test))
head(predict(svm,newdata = test,type="class"))
head(predict(svm,newdata = test))
head(predict(final.model,newdata = test))
head(predict(final.model,newdata = test,type="prob"))
head(predict(svm,newdata = test,type="prob"))
p.est.1<-predict(svm,newdata = test, type = "probabilities")
svm<-ksvm(Tipo~.,data=train,prob.model=TRUE)
svm #Param C = 1; Sigma = 0.05438
p.est.1<-predict(svm,newdata = test, type = "probabilities")
head(p.est.1)
tune.grid<-expand.grid(sigma=c(0.01,0.05,0.1),C=c(0.5,1,10),error=NA)
best.err <- Inf
set.seed(40)
for (i in 1:nrow(tune.grid)){
fit<-ksvm(Tipo~.,prob.model=TRUE,data=train[,],cross=10,C=tune.grid$C[i],kpar=list(tune.grid$sigma[i]))
fit.error<-fit@cross
tune.grid$error[i] <- fit.error
if (fit.error < best.err) {
final.model <- fit
best.err <- fit.error
best.tune <- tune.grid[i, ]
}
}
p.est.2<-predict(final.model,newdata = test, type = "probabilities")
head(p.est.2)
cbind(p.est.1,p.est.2)
head(cbind(p.est.1,p.est.2))
?confusionMatrix
